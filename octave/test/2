# TEST: 2.t0
# octave-qf > std.txt <<!!!
# pkg load bop
# B.x = B.y = B.z = [1 2 3];
# B.vx = [10, 20, 30];
# bop_write_vtk(B, "b.vtk");
#!!!
# cp b.vtk b.out.vtk
#

# TEST: 2.t1
# octave-qf > std.txt <<!!!
# pkg load bop
# B = bop_read_ply("test_data/r.ply");
# x = B.x; y = B.y;
# x = x(1:10)(:); y = y(1:10)(:);
# dlmwrite("b.txt", horzcat(x, y), ' ');
#!!!
# cp b.txt   b.out.txt
#

# TEST: 2.t1
# octave-qf > std.txt <<!!!
# pkg load bop
# B = bop_read_ply("test_data/r.ply");
# x = B.x; y = B.y;
# x = x(1:10)(:); y = y(1:10)(:);
# dlmwrite("b.txt", horzcat(x, y), ' ');
#!!!
# cp b.txt   b.out.txt
#

# TEST: 2.t2
# octave-qf > std.txt <<!!!
# pkg load bop
# [B, F] = bop_read_ply("test_data/r.ply");
# nt = numel(F.f1);
# F.id = 1:nt;
# bop_write_tri(B, F, "t.vtk");
#!!!
# cp t.vtk   t.out.vtk
#

# TEST: 2.t3
# octave-qf > std.txt <<!!!
# pkg load bop
# [B, F] = bop_read_off("test_data/sph.162.off");
# nt = numel(F.f1);
# F.id = 1:nt;
# bop_write_tri(B, F, "t.vtk");
#!!!
# cp t.vtk   t.out.vtk
#
